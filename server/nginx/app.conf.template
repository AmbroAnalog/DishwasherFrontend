# TODO: replace 'domain' with your domain name
# server for http redirect to https
server {
    listen 80;
    server_name domain.de www.domain.de;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://domain.de$request_uri;
    }
}

# server for www redirect
server {
    listen 443 ssl http2;
    server_name www.domain.de;

    ssl_certificate /etc/letsencrypt/live/domain.de/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/domain.de/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    return 301 https://domain.de$request_uri;
}

map $http_upgrade $connection_upgrade{
    default upgrade;
    `` close;
}
upstream websocket{
    server 192.168.0.25:5000;
    #SERVER endpoint that handle ws:// connections
}

server {
    listen 443 ssl http2;
    server_name domain.de;
    server_tokens off;

    root /usr/share/nginx/html;

    ssl_certificate /etc/letsencrypt/live/domain.de/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/domain.de/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
      proxy_set_header X_FORWARDED_PROTO https;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Url-Scheme $scheme;
      proxy_redirect    off;
      proxy_max_temp_file_size 0;
    }
    location /api/ {
      proxy_pass http://192.168.0.25:5000/;
    }
    location /live/ {
      proxy_pass http://192.168.0.25:5000;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }
}

}
